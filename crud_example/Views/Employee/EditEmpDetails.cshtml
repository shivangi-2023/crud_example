@model crud_example.Models.EmpModel
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <h4>Update User Details</h4>
    <hr />

    <div>
        <a href="@Url.Action("GetAllEmpDetails")" class="btn btn-info">Back to Details</a>
    </div>
    <hr />
    if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success" style="text-align:center">@TempData["SuccessMessage"]</div>
    }
    <div class="container" style="border: 4px solid green; width: 350px; height: 500px; background-color: lightseagreen; ">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Userid)
        <div class="form-group">
            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-3", style = "color: white;" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div><br /><br />
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-3", style = "color: white;" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-3", style = "color: white;" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <br><br>
        <div class="form-group">
            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-3", style = "color: white;" })
            <div class="col-md-10">

                @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "datepicker" } })

                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
            </div>

        </div>

        <br>
        <div class="form-group">
            <br /><br />
            @*//@Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2", style = "color: white;" })*@
            <div class="col-md-4">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2", style = "color: white;" })
                <br />
                <label class=" = radio-inline">
                    @Html.RadioButtonFor(model => model.Gender, "Male", new { @name = "gender", @class = "custom-radio" })<span style="color: white;">
                        Male
                    </span>
                </label><br />
                <label class=" = radio-inline">
                    @Html.RadioButtonFor(model => model.Gender, "Female", new { @name = "gender", @class = "custom-radio" })<span style="color: white;">
                        Female
                    </span>
                </label><br />
                <label class=" = radio-inline">
                    @Html.RadioButtonFor(model => model.Gender, "Other", new { @name = "gender", @class = "custom-radio" })<span style="color: white;">Other</span>
                </label>
            </div>
        </div>

        <br /><br />
        <div class="col-md-10">
            <br />
            @Html.Label("City", htmlAttributes: new { @class = "control-label col-md-3", style = "color: white;" })
            <br>
            @Html.DropDownList("CityId", new SelectList(ViewData["CityList"] as List<crud_example.Models.City>, "CityId", "CityName"), "-- Select City Name --", new { @class = "Search" })


        </div>


        <div class="form-group">
            <div class=" col-md-10">
                <br />
                <button onclick="showmessage('Record Updated successfully...')" class="btn btn-primary btn-block custom-button">Update</button>

                @*//<input type="submit" value="Update" class="btn btn-primary btn btn-primary btn-block btn-block custom-button" />*@
            </div>
        </div>
    </div>
}
<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">

<link href="@Url.Content("~/Content/site.css")" rel="stylesheet" type="text/css" />



<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">

@section scripts {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script>
        $(function () {
            $(".datepicker").datepicker({
                dateFormat: "mm/dd/yy",
                changeMonth: true,
                changeYear: true,
                minDate: new Date(1969, 10 - 1, 25),
                maxDate: new Date(),
                showOn: "both",
                buttonText: "<i class='fa fa-calendar'></i>"
            });

        });
    </script>
}

<script>
    // Function to display the message
    function showMessage(message) {
        alert(message);
    }
</script>