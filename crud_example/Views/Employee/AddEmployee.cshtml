@model crud_example.Models.EmpModel

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>Add Employee</h4>

        <div>
            <a href="@Url.Action("GetAllEmpDetails")" class="btn btn-primary">User List</a>
        </div>
        <hr />

        <h1 style=" color:navy; font-size:23px; text-align-last:center">Welcome to My Web Application!!!!</h1>
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>


        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success " style="text-align:center">@TempData["SuccessMessage"]</div>
        }

        <div class="container" style="border: 4px solid green; width: 300px; height: 670px; background-color: lightseagreen; ">

            <div style="text-align: left;"><h4 style=" color:black; font-size:23px;">Create User</h4></div>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2", style = "color: white; " })<br /><br />
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter your Username" } })
                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2", style = "color: white;" })<br /><br />
                <div class="col-md-10">
                    @Html.PasswordFor(model => model.Password, new { @class = "form-control", placeholder = "Enter your password" })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2", style = "color: white;" })<br /><br />
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter your Email" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2", style = "color: white;" })
                <br /><br />
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "datepicker", placeholder = "select your Birthdate" } })
                    <br />
                    @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                </div>

            </div>



            <div class="form-group">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2", style = "color: white;" })
                <div class="col-md-10">
                    <label class=" = radio-inline">
                        @Html.RadioButtonFor(model => model.Gender, "Male", new { @name = "gender", @class = "custom-radio" })<span style="color: white;">
                            Male
                        </span>
                    </label>
                    <label class=" = radio-inline">
                        @Html.RadioButtonFor(model => model.Gender, "Female", new { @name = "gender", @class = "custom-radio" })<span style="color: white;">
                            Female
                        </span>
                    </label>
                    <label class=" = radio-inline">
                        @Html.RadioButtonFor(model => model.Gender, "Other", new { @name = "gender", @class = "custom-radio" })<span style="color: white;">Other</span>
                    </label>
                </div>
            </div>


            <div class="col-md-10">
                @Html.Label("City", htmlAttributes: new { @class = "control-label col-md-2", style = "color: white; display: inline;" })<br>

                @Html.DropDownList("CityId", new SelectList(ViewData["CityList"] as List<crud_example.Models.City>, "CityId", "CityName"), "-- Select City Name --", new { @class = "Search" })

                @*<span id="cityError" style="color: red; display: none;">Please select a city.</span>*@

            </div>


            <br /><br />

            <div class="form-group">
                <div class="col-md-10">
                    <br />
                    <button onclick="showmessage('record added successfully...')" class="btn btn-primary btn-block custom-button">Save</button>

                    @*// <input type="submit" value="SAVE" class="btn btn-primary btn btn-primary btn-block btn-block custom-button " />*@
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10" style="color:green">
                    @ViewBag.Message
                </div>
            </div>
        </div>
    </div>

}
<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">

<link href="@Url.Content("~/Content/site.css")" rel="stylesheet" type="text/css" />



<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">

@section scripts {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script>
        $(function () {
            $(".datepicker").datepicker({
                dateFormat: "mm/dd/yy",
                changeMonth: true,
                changeYear: true,
                minDate: new Date(1969, 30 - 1, 25),
                maxDate: new Date(),
                showOn: "both",
                buttonText: "<i class='fa fa-calendar'></i>"
            });

        });
    </script>
}




<script>
    // Function to display the message
    function showMessage(message) {
        alert(message);
    }
</script>


