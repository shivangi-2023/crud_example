@model crud_example.Models.EmpModel

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
<div class="form-horizontal">
    <h4>Add Employee</h4>

    <div>
        @Html.ActionLink("User List", "GetAllEmpDetails")
    </div>
    <hr />

    <h1 style=" color:navy; font-size:23px; text-align-last:center">Welcome to My Web Application Form!!!!</h1>
    @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-12 text-center" style="width:300px">
                @Html.TextBox("searchText", null, new { @class = "form-control", style = "width: 700px; height: auto; ", placeholder = " search text" });

            </div>
            <div class="col-md-4">
                <input type="submit" value="Search" class="btn btn-primary btn btn-primary btn-block btn-block custom-button" />
                <i class="fas fa-search"></i>
            </div>


        </div>*@
    

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">@TempData["SuccessMessage"]</div>
    }

    <div class="container" style="border: 4px solid green; width: 350px; height: 600px; background-color: lightseagreen; ">

        <div style="text-align: left;"><h4 style=" color:black; font-size:23px;">Create User</h4></div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2", style = "color: white;" })<br /><br />
            <div class="col-md-10">
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter your Username" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2", style = "color: white;" })<br /><br />
            <div class="col-md-10">
                @Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter your password" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2", style = "color: white;" })<br /><br />
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter your Email" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2", style = "color: white;" })<br /><br />
            <div class="col-md-10">
                @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter your Birthdate" } })
                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2", style = "color: white;" })
            <div class="col-md-10">
                <label class=" = radio-inline">
                    @Html.RadioButtonFor(model => model.Gender, "Male", new { @name = "gender", @class = "custom-radio" })<span style="color: white;">
                        Male
                </label>
                <label class=" = radio-inline">
                    @Html.RadioButtonFor(model => model.Gender, "Female", new { @name = "gender", @class = "custom-radio" })<span style="color: white;">
                        Female
                </label>
                <label class=" = radio-inline">
                    @Html.RadioButtonFor(model => model.Gender, "Other", new { @name = "gender", @class = "custom-radio" })<span style="color: white;">Other
                </label>
            </div>
        </div>


        <div class="col-md-10">
            &nbsp;
            @Html.Label("City", htmlAttributes: new { @class = "control-label col-md-2", style = "color: white;" })&nbsp;
            <br />
            @Html.DropDownList("CityId", new SelectList(ViewData["CityList"] as List<crud_example.Models.City>, "CityId", "CityName"), "-- Select City Name --", new { @class = "Search" })


        </div>


        <br /><br />

        <div class="form-group">
            <div class="col-md-10">
                <br />
                <button onclick="showmessage('record added successfully...')" class="btn btn-primary btn-block custom-button">Save</button>

                @*// <input type="submit" value="SAVE" class="btn btn-primary btn btn-primary btn-block btn-block custom-button " />*@
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10" style="color:green">
                @ViewBag.Message
            </div>
        </div>
    </div>
</div>

}
<link href="@Url.Content("~/Content/site.css")" rel="stylesheet" type="text/css" />

@*<script>
        function showMessage(message) {
            alert(message);
            sessionStorage.setItem("SuccessMessage", message); // Store the message in sessionStorage
            window.location.href = '@Url.Action("AddEmployee", "Employee")';
        }
    </script>*@

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script>
    // Function to display the message
    function showMessage(message) {
        alert(message);
    }
</script>
